// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    FooAdd(in=address,x=x,y=y);

    DMux8Way16(in=in,sel=x,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
    DMux8Way(in=load,sel=x,a=la,b=lb,c=lc,d=ld,e=le,f=lf,g=lg,h=lh);

    RAM8(in=a,load=la,address=y,out=outa);
    RAM8(in=b,load=lb,address=y,out=outb);
    RAM8(in=c,load=lc,address=y,out=outc);
    RAM8(in=d,load=ld,address=y,out=outd);
    RAM8(in=e,load=le,address=y,out=oute);
    RAM8(in=f,load=lf,address=y,out=outf);
    RAM8(in=g,load=lg,address=y,out=outg);
    RAM8(in=h,load=lh,address=y,out=outh);

    Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh,sel=x,out=out);

  }
